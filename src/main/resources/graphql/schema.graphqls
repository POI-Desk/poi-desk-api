type Query{
    getAllUsers: [User]
    getUserById(id: ID): User
    getRolesOfUser(id: ID): [Role]
    allBookings: [Booking]
    getBookingsByDate(date: String): [Booking]
    getBookingById(id: ID): Booking
    getAllBookingLogs: [BookingLog]
    getAllExpiredBookingLogs: [BookingLog]
    getAllDeletedBookingLogs: [BookingLog]
    getMorningBookingLogs: [BookingLog]
    getAfternoonBookingLogs: [BookingLog]
    getFullDayBookingLogs: [BookingLog]
    getAllLocations: [Location]
    getAllSeats: [Seat]
    getAllFloors: [Floor]
    getSeatsOnFloor(floorid: ID): [Seat]
    hasDefaultLocation(id: ID): Boolean
    isBookedAt(seatId: ID, date: String, dayTime: String): Boolean
    getBookingsByUserid(userid: ID): [Booking]
    getFloorsInBuilding(buildingid: ID): [Floor]
    getBuildingsInLocation(locationid: ID): [Building]
    getSeatOfBooking(bookingid: ID): Seat
}

type Mutation{
    changeUsername(id: String, name:String): User
    bookSeat(date: String, isMorning: Boolean, isAfternoon: Boolean, userId: String, seatId: String): Booking
    deleteBooking(bookingId: ID): ID
    setdefaultLocation(userid: ID, locationid: ID): Boolean
    createOrLoginAsUser(username: String): User
    editBooking(bookingInput: EditBookingInput) : Booking
}

type Attribute{
    pk_attributeid: ID
    attributename: String
    createdon: String
    updatedon: String
    seats: [Seat]
}

type Booking{
    pk_bookingid: ID
    bookingnumber: String
    date: String
    createdon: String
    updatedon: String
    ismorning: Boolean
    isafternoon: Boolean
    user: User
    seat: Seat
}

type BookingLog{
    pk_bookinglogid: ID
    bookingnumber: String
    date: String
    createdon: String
    updatedon: String
    ismorning: Boolean
    isafternoon: Boolean
    wasdeleted: Boolean
    user: User
    seat: Seat

}

type Building{
    pk_buildingid: ID
    buildingname: String
    createdon: String
    updatedon: String
    location: Location
    floors: [Floor]
}

type Floor{
    pk_floorid: ID
    floorname: String
    createdon: String
    updatedon: String
    building: Building
    seats: [Seat]
}
type Location{
    pk_locationid: ID
    locationname: String
    createdon: String
    updatedon: String
    users: [User]
    buildings: [Building]
}

type Role{
    pk_roleid: ID
    rolename: String
    createdon: String
    updatedon: String
    users: [User]
}

type Seat{
    pk_seatid: ID
    seatnum: String
    x: Float
    y: Float
    createdon: String
    updatedon: String
    bookings: [Booking]
    bookinglogs: [BookingLog]
    attributes: [Attribute]
    floor: Floor
}

type User{
    pk_userid: ID
    username: String
    createdon: String
    updatedon: String
    roles: [Role]
    bookings: [Booking]
    bookinglogs: [BookingLog]
    location: Location
}

input EditBookingInput{
    pk_bookingid: ID
    seatid: ID
    date: String
    isMorning: Boolean
    isAfternoon: Boolean
}